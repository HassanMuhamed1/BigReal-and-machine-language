////youssef Medhat// File: A2_All-B_20220503_2.cpp
//// Purpose: convetring male speech into male or female speech
//// Author: Youssef Medhat Ahmed Ali
//// Section: All-B
//// ID: 20220503
//// TA: Mohamed Talaat
//// Date: 4 Nov 2023

#include <bits/stdc++.h>
#include <string>
#include <algorithm>
using namespace std;

string convert(const string &sentence)
{
    vector<string>words;
    istringstream iss(sentence);
    string word;
    while(iss >> word)
    {
        if(word=="he"||word=="He")
            words.emplace_back("he or she");
        else if(word=="him"||word=="Him")
            words.emplace_back("him or her");
        else if(word=="his"||word=="His")
            words.emplace_back("his or her");
        else if(word=="himself"||word=="Himself")
            words.emplace_back("himself or herself");
        else
            words.emplace_back(word);
    }
    string result;
    for(const auto &w:words)
        result+=w+" ";
    return result;
}
int main() {
    string sentence;
    cout<<"Enter the sentence that you want to convert: ";
    getline(cin,sentence);
    cout<<convert(sentence)<<endl;
    return 0;
}


////youssef Medhat// File: A2_All-B_20220503_5.cpp
//// Purpose: manages a list of up to 10 players and their high scores
//// Author: Youssef Medhat Ahmed Ali
//// Section: All-B
//// ID: 20220503
//// TA: Mohamed Talaat
//// Date: 4 Nov 2023

#include <bits/stdc++.h>
#include <string>
#include <algorithm>
using namespace std;

struct Player{
    string Name;
    int Score;
};
multimap<string,int>players;
vector<Player>topplayers;
bool compareplayers(const Player& p1, const Player& p2)
{
    return p1.Score>p2.Score;
}

int main() {

    while(true)
    {
        cout<<"press 1 to enter a new player: "
            <<'\n'<<"press 2 to print the top 10 names with the highest score: "
            <<"\n"<<"press 3 to see the player's highest score if he is one of the top 10 players: "
            <<'\n'<<"press 4 to exit!"<<endl;
        int MenuOptions;
        cin>>MenuOptions;
        if(MenuOptions==1)
        {
            string PlayerName;
            int PlayerScore;
            cout<<"Enter player name: ";cin>>PlayerName;
            cout<<"Enter player score: ";cin>>PlayerScore;
            players.insert(make_pair(PlayerName,PlayerScore));
            if(players.size()>10)
            {
                auto it= min_element(players.begin(),players.end());
                players.erase(it);
            }
        }
        else if(MenuOptions==2) {
            topplayers.clear();
            for (auto it = players.begin(); it != players.end(); ++it)
            {
                Player p={it->first,it->second};
                topplayers.push_back(p);
            }
            sort(topplayers.begin(),topplayers.end(), compareplayers);
            for(auto it=topplayers.begin();it<topplayers.end();++it)
            {
                cout<<"Player Name is: "<<it->Name<<" with score of: "<<it->Score<<endl;
            }
        }
        else if(MenuOptions==3)
        {
            string name;
            cout<<"Enter the name of the player: ";cin>>name;
            auto range=players.equal_range(name);
            if(range.first==range.second)
                cout<<"player is not found"<<endl;
            else
            {
                int maxScore=-1;
                for(auto it=range.first;it!=range.second;++it)
                {
                    if(it->second> maxScore)
                        maxScore=it->second;
                }
                cout<<"The player's highest score is: "<<maxScore<<endl;
            }
        }
        else if(MenuOptions==4)
            break;
        else
            cout<<"invalid option please try again";
    }
}


////youssef Medhat// File: A2_All-B_20220503_8.cpp
//// Purpose: recursion without a purpose
//// Author: Youssef Medhat Ahmed Ali
//// Section: All-B
//// ID: 20220503
//// TA: Mohamed Talaat
//// Date: 4 Nov 2023

#include <iostream>
#include <bits/stdc++.h>
using namespace std;
void pattern(int n, int i = 0)
{
    if(n == 1)
    {
        for(int j = 0;j < i;j++)
        {
            cout<<' ';
        }
        cout<<'*'<<endl;
    }
    else
    {
        pattern(n / 2, i);
        for(int j = 0;j < i;j++)
            cout<<' ';
        for(int j = 0;j < n;j++)
            cout<<"* ";
        cout<<endl;
        pattern(n / 2, n / 2 +i);
    }

}
int main() {
    pattern(8,0);
    return 0;
}



////youssef Medhat// File: A2_All-B_20220503_11.cpp
//// Purpose: Dealing with files
//// Author: Youssef Medhat Ahmed Ali
//// Section: All-B
//// ID: 20220503
//// TA: Mohamed Talaat
//// Date: 4 Nov 2023

#include <iostream>
#include <fstream>
#include <bits/stdc++.h>


using namespace std;


bool compare_char(const string& file1, const string& file2) {
    ifstream f1(file1);
    ifstream f2(file2);

    char c1, c2;
    int line = 1, position = 0;

    while (f1.get(c1) && f2.get(c2)) {
        if (c1 != c2) {
            cout << "Files are diffirent at line " << line << ", position " << position + 1 << endl;
            cout << "File 1: " << c1 << endl;
            cout << "File 2: " << c2 << endl;
            return false;
        }
        if (c1 == '\n') {
            line++;
            position = 0;
        }
        else {
            position++;
        }
    }

    // it checks if one of the input files has reached its end before the other
    if (!f1.eof() || !f2.eof()) {
        cout << "Files don't have the same lengths." << endl;
        return false;
    }

    cout << "Files are identical." << endl;
    return true;
}


// Function to compare two files word by word (ignoring whitespace)
bool compare_word(const string& file1, const string& file2) {
    ifstream f1(file1);
    ifstream f2(file2);

    string word1, word2;
    int line = 1, wordPosition = 0;

    while (f1 >> word1 && f2 >> word2) {
        // Remove whitespace, tabs from words before comparison
        word1.erase(remove_if(word1.begin(), word1.end(), ::isspace), word1.end());
        word2.erase(remove_if(word2.begin(), word2.end(), ::isspace), word2.end());

        if (word1 != word2) {
            cout << "Files are different at line " << line << ", word " << wordPosition + 1 << endl;
            cout << "File 1: " << word1 << endl;
            cout << "File 2: " << word2 << endl;
            return false;
        }

        if (word1 == "\n") {
            line++;
            wordPosition = 0;
        }
        else {
            wordPosition++;
        }
    }

    // Check if the files have different lengths
    if ((f1 >> word1) || (f2 >> word2)) {
        cout << "Files have different lengths." << endl;
        return false;
    }

    cout << "Files are identical." << endl;
    return true;
}

int main() {

    string file1, file2;
    int choice;
    cout << "Enter the name of the first file : " << endl;
    cin >> file1;
    cout << "Enter the name of the second file : " << endl;
    cin >> file2;
    file1 += ".txt";
    file2 += ".txt";
    cout << "press 1 to compare by character or 2 to compare by word: " << endl;
    cin >> choice;

    if (choice==1) {
        compare_char(file1, file2);
    }
    else if (choice == 2) {
        compare_word(file1, file2);
    }
    else {
        cout << "Invalid comparison type. Please choose 1 or 2." << endl;
    }

    return 0;
}

